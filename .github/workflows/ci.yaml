name: Go CI Pipeline

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  # =========================
  # STEP 1 - Lint & Vet
  # =========================
  lint:
    name: Lint & Vet
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.13'  # Временно используем стабильную версию

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.64.8

      # - name: Run golangci-lint
      #   run: golangci-lint run ./...
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.64.8
          args: --out-format=colored-line-number

      - name: Run go vet
        run: go vet ./...

  # =========================
  # STEP 2 - Run Tests
  # =========================
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint  # Выполняется после lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.13'

      - name: Run tests
        run: make test

  # =========================
  # STEP 3 - Build Binary
  # =========================
  build:
    name: Build Go Project
    runs-on: ubuntu-latest
    needs: test  # Выполняется после тестов

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.13'

      - name: Build binary
        run: make build

  # =========================
  # STEP 4 - Build Docker Image
  # =========================
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build  # Выполняется после сборки

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: make docker

  # =========================
  # STEP 5 - Scan Docker Image
  # =========================
  # =========================
  # STEP 5 - Scan Docker Image
  # =========================
  security:
    name: Security Scan with Trivy
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image with SHA tag
        run: |
          docker build -t go-ci-demo:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'go-ci-demo:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
